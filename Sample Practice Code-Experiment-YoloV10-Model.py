"""Sample Practice Code-Experiment-YoloV10-Model


Automatically generated by Google Colab.

Import Basic Librarries:-
"""

import os

!nvidia-smi

HOME = os.getcwd()

print(HOME)

!pip install ultralytics==8.0.196

from IPython import display
display.clear_output()

import ultralytics
ultralytics.checks()

from ultralytics import YOLO

from IPython.display import display, Image

"""Related Works:-"""

#https://youtu.be/neBZ6huolkg

#https://youtu.be/wuZtUMEiKWY

#https://youtu.be/Dmv4EVBuCTQ

# Commented out IPython magic to ensure Python compatibility.
!mkdir {HOME}/datasets
# %cd {HOME}/datasets

!pip install roboflow --quiet

"""Custom Training with RoboflowDataset Annotations:- Sample Relavant Data Collections

*   https://universe.roboflow.com/sportsfootballdataanalytics/footballsportsdataanalyticsyolov-image-dataset


*   https://universe.roboflow.com/azami-youssef/test_project-3cocv/dataset/

Sample Code-Footballsports Data Analytics-YoloV10 models Implementations:-
"""

!pip install -q supervision

!pip install -q git+https://github.com/THU-MIG/yolov10.git

"""Download pre-trained weights:-"""

!mkdir -p {HOME}/weights
!wget -P {HOME}/weights -q https://github.com/jameslahm/yolov10/releases/download/v1.0/yolov10n.pt
#!wget -P {HOME}/weights -q https://github.com/jameslahm/yolov10/releases/download/v1.0/yolov10s.pt
#!wget -P {HOME}/weights -q https://github.com/jameslahm/yolov10/releases/download/v1.0/yolov10m.pt
#!wget -P {HOME}/weights -q https://github.com/jameslahm/yolov10/releases/download/v1.0/yolov10b.pt
#!wget -P {HOME}/weights -q https://github.com/jameslahm/yolov10/releases/download/v1.0/yolov10x.pt
#!wget -P {HOME}/weights -q https://github.com/jameslahm/yolov10/releases/download/v1.0/yolov10l.pt
!ls -lh {HOME}/weights

"""Download Pre-trained Custom Roboflow Datasets:-"""

from roboflow import Roboflow

rf = Roboflow(api_key="Cvw2eB4Y45dwuOvsMfsV")
project = rf.workspace("azami-youssef").project("test_project-3cocv") #Data Selection for this experiment
version = project.version(2)
dataset = version.download("yolov8") # yolov4, 5, 8 , 9 based on the requirements.

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}

!yolo task=detect mode=train model=/content/weights/yolov10n.pt data={dataset.location}/data.yaml epochs=4 imgsz=1000 plots=True

#%cd {HOME}

#!yolo task=detect mode=train epochs=100 batch=64 plots=True \
#model={HOME}/weights/yolov10x.pt \
#data={dataset.location}/data.yaml

!ls {HOME}/runs/detect/train/

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
Image(filename=f'{HOME}/runs/detect/train/confusion_matrix.png', width=600)

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
Image(filename=f'{HOME}/runs/detect/train/results.png', width=600)

#%cd {HOME}
#Image(filename=f'{HOME}/runs/detect/train/val_batch0_pred.jpg', width=940)

"""Validate Custom Model:-"""

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}

!yolo task=detect mode=val model={HOME}/runs/detect/train/weights/best.pt data={dataset.location}/data.yaml

"""Inference with Custom Model:-"""

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
!yolo task=detect mode=predict model={HOME}/runs/detect/train/weights/best.pt conf=0.40 source={dataset.location}/test/images save=True

import glob

from IPython.display import Image, display

for image_path in glob.glob(f'{HOME}/runs/detect/predict/*.jpg')[:4]:
      display(Image(filename=image_path, width=640))
      print("\n")

"""Inference on Sample Video Datasets;-"""

#!yolo task=detect mode=predict conf=0.30 save=True model=runs/detect/train/weights/best.pt source=/content/Input-Unseen-test.mp4